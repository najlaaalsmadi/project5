@model IEnumerable<project5_voting.Models.localCandidate>


@{
    ViewBag.Title = "localCandidate";
}

<h2 class="text-right mb-4">تقدم طلب أسماء المترشحين</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="container mt-5">
        <div class="card border-0 shadow-lg">
            <div class="card-body">
                <h4 class="card-title text-right text-dark mb-4">تعبئة أسماء المترشحين في القائمة</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @if (TempData["wrongId"] != null)
                {
                    <div class="alert alert-danger text-right">
                        @TempData["wrongId"]
                    </div>
                }

                <div class="form-horizontal">
                    <div class="form-group row mb-4">
                        <label class="col-md-2 col-form-label text-right text-primary">الرقم الوطني</label>
                        <div class="col-md-10">
                            <input name="national_id" class="form-control form-control-lg rounded-pill" placeholder="الرجاء إدخال الرقم الوطني" />
                        </div>
                    </div>

                    <div class="form-group row mb-4">
                        <label class="col-md-2 col-form-label text-right text-primary">نوع المقعد</label>
                        <div class="col-md-10">
                            <select name="typeOfChair" class="form-control form-control-lg rounded-pill">
                                <option value="">اختر نوع مقعد الترشح</option>
                                <option value="تنافس">تنافس</option>
                                <option value="كوتا">كوتا</option>
                                <option value="مسيحي">مسيحي</option>
                            </select>
                        </div>
                    </div>

                    <div class="form-group row mb-4">
                        <label class="col-md-2 col-form-label text-right text-primary">تحميل صورة المرشح</label>
                        <div class="col-md-10">
                            <input type="file" name="candidateImage" class="form-control form-control-lg rounded-pill" />
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-10 offset-md-2">
                            <button type="submit" class="btn btn-gradient btn-lg rounded-pill shadow">إنشاء</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div class="container mt-5">
    <div class="card border-0 shadow-lg">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-striped text-right">
                    <thead class="thead-dark">
                        <tr>
                            <th>الرقم</th>
                            <th>الصورة</th>
                            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().candidateName)</th>
                            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().election_area)</th>
                            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().email)</th>
                            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().national_id)</th>
                            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().gender)</th>
                            <th>تاريخ الميلاد</th>
                            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().religion)</th>
                            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().typeOfChair)</th>
                            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().listName)</th>
                            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().localList.listName)</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null)
                        {
                            int counter = 1;
                            foreach (var item in Model)
                            {
                                if (Convert.ToInt64(Session["listId"]) == item.listKey)
                                {
                                    <tr>
                                        <td>@counter</td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(item.img))
                                            {
                                                <img src="@Url.Content(item.img)" alt="Candidate Image" style="width: 100px; height: auto; border-radius: 10px;" />
                                            }
                                            else
                                            {
                                                <span>لا يوجد صورة</span>
                                            }
                                        </td>
                                        <td>@Html.DisplayFor(modelItem => item.candidateName)</td>
                                        <td>@Html.DisplayFor(modelItem => item.election_area)</td>
                                        <td>@Html.DisplayFor(modelItem => item.email)</td>
                                        <td>@Html.DisplayFor(modelItem => item.national_id)</td>
                                        <td>@Html.DisplayFor(modelItem => item.gender)</td>
                                        <td>@item.birth_day.Value.ToString("yyyy-MM-dd")</td>
                                        <td>@Html.DisplayFor(modelItem => item.religion)</td>
                                        <td>@Html.DisplayFor(modelItem => item.typeOfChair)</td>
                                        <td>@Html.DisplayFor(modelItem => item.listName)</td>
                                        <td>@Html.DisplayFor(modelItem => item.localList.listName)</td>
                                        <td>
                                            @using (Html.BeginForm("Delete", "localCandidates", FormMethod.Post, new { id = item.id }))
                                            {
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn btn-danger btn-sm rounded-pill shadow-sm" onclick="return confirm('هل أنت متأكد أنك تريد حذف هذا العنصر؟')">حذف</button>
                                                @Html.Hidden("id", item.id)
                                            }
                                        </td>
                                    </tr>
                                    counter++;
                                }
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<form action="@Url.Action("ClearSessionAndRedirect", "localCandidates")" method="post">
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-secondary btn-lg rounded-pill shadow mt-4" onclick="return confirmBackToHome();">تقديم الطلب</button>
</form>

@{
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    // Display SweetAlert for validation messages or confirmation dialogs

    function confirmBackToHome() {
        return Swal.fire({
            title: 'هل أنت متأكد من تقديم الطلب؟',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'نعم، انتقل!',
            cancelButtonText: 'لا، ابقى هنا'
        }).then((result) => {
            return result.isConfirmed;
        });
    }
    @if (TempData["wrongId"] != null)
    {
        <text>
        Swal.fire({
            icon: 'error',
            title: 'خطأ في التقديم',
            text: '@TempData["wrongId"]',
            confirmButtonText: 'موافق'
        });
        </text>
    }

    @if (ViewBag.AlertMessage != null)
    {
        <text>
        Swal.fire({
            icon: 'error',
            title: 'خطأ في التقديم',
            text: '@ViewBag.AlertMessage',
            confirmButtonText: 'موافق'
        });
        </text>
    }
</script>

<style>
    body {
        direction: rtl;
        background: linear-gradient(to right, #ece9e6, #ffffff);
        font-family: 'Cairo', sans-serif;
    }

    h2 {
        font-weight: bold;
        color: #000;
    }

    .text-right {
        text-align: right;
    }

    .form-horizontal .form-group {
        text-align: right;
    }

    .form-group.row {
        direction: rtl;
    }

    .card {
        border-radius: 15px;
        background: #ffffff;
        padding: 30px;
        box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.1);
    }

    .form-control-lg {
        border: 2px solid #198754;
        padding: 15px;
        font-size: 1.1rem;
        color: #495057;
    }

    .btn-gradient {
        background: linear-gradient(90deg, #fb2345 0%, #198754 100%);
        color: white;
        border: none;
        padding: 10px 30px;
        font-size: 1.1rem;
        transition: all 0.3s ease;
    }

        .btn-gradient:hover {
            background: linear-gradient(90deg, #198754 0%, #fb2345 100%);
            transform: scale(1.05);
        }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
    }

        .btn-secondary:hover {
            background-color: #5a6268;
        }

    .text-primary {
        color: #000 !important;
    }

    .shadow-lg {
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15) !important;
    }

    .table-responsive {
        overflow-x: auto;
    }

    .table {
        margin-bottom: 0;
    }
</style>

